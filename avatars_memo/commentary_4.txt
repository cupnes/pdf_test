[PDF解説-4] 文字の描画その2(Unicode)

日本語などのASCII外の文字は「その1」で説明した方法とは少し違った方法で描画します。

ここでもてっとり早く例を示します。

以下は、このPDFの1ページ目でタイトルバーに「ヘルプ」と描画している部分の抜粋です。
==
	1 1 1 rg

	% Title text
	BT
	/F2 10.5 Tf
	20 217 Td
	[<01><02><03>]TJ
	ET
==

設定の仕方がASCIIの場合と違っているのは「[<01><02><03>]TJ」の部分で、
これは「フォント側で定義された<01>・<02>・<03>の文字を描画する」という意味です。

「ヘ・ル・プ」の文字数と一致することからも、この「<01>・<02>・<03>」が、
ここで使用している「/F2」のフォント側で「ヘ・ル・プ」の3文字に対応していることが分かるかと思います。

では、その対応はどのように定義されているのかを見てみます。

ページ集合オブジェクトで、「/F2」はオブジェクト番号10番を参照しています。

「10 0 obj」の定義を抜粋すると以下の通りです。
==
10 0 obj
	<<
		/Type /Font
		/Subtype /TrueType
		/BaseFont /CAAAAA+IPAPGothic
		/FirstChar 0
		/LastChar 255
		/Widths [1000 959 ...(省略)
		/FontDescriptor 11 0 R
		/ToUnicode 12 0 R
	>>
endobj
==

「/FirstChar」と「/LastChar」は、このフォント定義で定義している文字に割り当てている連番の始まりと終わりを設定しています。
0から255であることからも分かるとおり、先程の「<01>」や「<02>」は実は16進数で、255番の文字を示す場合「<FF>」となります。

注目すべきは「/ToUnicode」で、この参照先を見ると、「<01>」や「<02>」の番号と実際の文字の対応がわかります。

「/ToUnicode」で参照しているオブジェクト番号12番の定義を抜粋すると以下の通りです。
==
12 0 obj
	<<	>>
stream
・・・省略・・・
100 beginbfchar
<01> <30D8>
<02> <30EB>
<03> <30D7>
<04> <3053>
<05> <306E>
==

「100 beginbfchar」の次の行から、正に「<01>」や「<02>」との対応を示すように、何らかの4桁の16進数の値が書かれています。
実はこの4桁の値はUnicode値で、「<01>」に対応している「30D8」は「ヘ(カタカナのヘ)」のUnicode値で、
「<02>」に対応している「30EB」は「ル」のUnicode値です。

これで、
・ASCII外の文字を描画する際は<01><02>のようにフォント定義で割り振られた番号で指定すること
・その番号のUnicode値との対応
がわかったかと思います。
